/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import Utilitarios.ModeloTabela;
import Utilitarios.conectaBanco;
import java.sql.*;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author italo
 */
public class CadastroModalidades extends javax.swing.JFrame {
    
    conectaBanco conecta= new conectaBanco();

    public CadastroModalidades() {
        initComponents();
        preencherJComboBoxModalidade();
        preencherJComboBoxDia();
        preencherJComboBoxHorario();
        preencherJComboBoxProfessor();
        preencherTabela("select * from CADASTROTURMAS order by ORDEM");
        //jSpinnerDisponivel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextFieldNovaModalidade2 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel23 = new javax.swing.JLabel();
        jButtonCadastrarTurma = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jTextFieldNovoDia = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jComboBoxDia = new javax.swing.JComboBox<>();
        jTextFieldNovoHorario = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jComboBoxHorario = new javax.swing.JComboBox<>();
        jTextFieldNovoProfessor = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jComboBoxProfessor = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableTurmas = new javax.swing.JTable();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jTextFieldNovaModalidade = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jComboBoxModalidade = new javax.swing.JComboBox<>();
        jTextFieldEditarOuExcluirModalidade = new javax.swing.JTextField();
        jTextFieldEditarOuExcluirDia = new javax.swing.JTextField();
        jTextFieldEditarOuExcluirHorario = new javax.swing.JTextField();
        jTextFieldEditarOuExcluirProfessor = new javax.swing.JTextField();
        jButtonEditarTurma = new javax.swing.JButton();
        jButtonExcluirModalidade = new javax.swing.JButton();
        jButtonExcluirDia = new javax.swing.JButton();
        jButtonExcluirHorario = new javax.swing.JButton();
        jButtonExcluirProfessor = new javax.swing.JButton();
        jTextFieldTurmaOrdem = new javax.swing.JTextField();
        jButtonExcluirTurma = new javax.swing.JButton();
        jButtonCadastroCamposDeTexto = new javax.swing.JButton();
        jButtonEditarCamposDeTexto = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jRadioButtonIlimitado = new javax.swing.JRadioButton();
        jRadioButtonLimitado = new javax.swing.JRadioButton();

        jTextFieldNovaModalidade2.setEnabled(false);
        jTextFieldNovaModalidade2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNovaModalidade2ActionPerformed(evt);
            }
        });

        jLabel25.setText("Horário:");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton3.setText("+");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("CADASTRO DE MODALIDADES");

        jButtonCadastrarTurma.setText("CRIAR");
        jButtonCadastrarTurma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCadastrarTurmaActionPerformed(evt);
            }
        });

        jLabel22.setText("Nome da modalidade:");

        jTextFieldNovoDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNovoDiaActionPerformed(evt);
            }
        });

        jLabel24.setText("Dia:");

        jComboBoxDia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxDia.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jComboBoxDiaPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jTextFieldNovoHorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNovoHorarioActionPerformed(evt);
            }
        });

        jLabel26.setText("Horário:");

        jComboBoxHorario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxHorario.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jComboBoxHorarioPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        jComboBoxHorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxHorarioActionPerformed(evt);
            }
        });

        jTextFieldNovoProfessor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNovoProfessorActionPerformed(evt);
            }
        });

        jLabel27.setText("Professor:");

        jComboBoxProfessor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jTableTurmas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableTurmas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableTurmasMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTableTurmasMouseEntered(evt);
            }
        });
        jScrollPane3.setViewportView(jTableTurmas);

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel28.setText("CADASTRO DE TURMAS");

        jLabel29.setText("Nome da modalidade:");
        jLabel29.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel30.setText("Dia:");

        jLabel31.setText("Horário:");

        jLabel32.setText("Professor:");

        jTextFieldNovaModalidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNovaModalidadeActionPerformed(evt);
            }
        });

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jComboBoxModalidade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jTextFieldEditarOuExcluirModalidade.setEnabled(false);
        jTextFieldEditarOuExcluirModalidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEditarOuExcluirModalidadeActionPerformed(evt);
            }
        });

        jTextFieldEditarOuExcluirDia.setEnabled(false);
        jTextFieldEditarOuExcluirDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEditarOuExcluirDiaActionPerformed(evt);
            }
        });

        jTextFieldEditarOuExcluirHorario.setEnabled(false);
        jTextFieldEditarOuExcluirHorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEditarOuExcluirHorarioActionPerformed(evt);
            }
        });

        jTextFieldEditarOuExcluirProfessor.setEnabled(false);
        jTextFieldEditarOuExcluirProfessor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEditarOuExcluirProfessorActionPerformed(evt);
            }
        });

        jButtonEditarTurma.setText("EDITAR");
        jButtonEditarTurma.setEnabled(false);
        jButtonEditarTurma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarTurmaActionPerformed(evt);
            }
        });

        jButtonExcluirModalidade.setText("EXCLUIR");
        jButtonExcluirModalidade.setEnabled(false);
        jButtonExcluirModalidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirModalidadeActionPerformed(evt);
            }
        });

        jButtonExcluirDia.setText("EXCLUIR");
        jButtonExcluirDia.setEnabled(false);
        jButtonExcluirDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirDiaActionPerformed(evt);
            }
        });

        jButtonExcluirHorario.setText("EXCLUIR");
        jButtonExcluirHorario.setEnabled(false);
        jButtonExcluirHorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirHorarioActionPerformed(evt);
            }
        });

        jButtonExcluirProfessor.setText("EXCLUIR");
        jButtonExcluirProfessor.setEnabled(false);
        jButtonExcluirProfessor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirProfessorActionPerformed(evt);
            }
        });

        jTextFieldTurmaOrdem.setEnabled(false);
        jTextFieldTurmaOrdem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTurmaOrdemActionPerformed(evt);
            }
        });

        jButtonExcluirTurma.setText("EXCLUIR");
        jButtonExcluirTurma.setEnabled(false);
        jButtonExcluirTurma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirTurmaActionPerformed(evt);
            }
        });

        jButtonCadastroCamposDeTexto.setText("NOVO");
        jButtonCadastroCamposDeTexto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCadastroCamposDeTextoActionPerformed(evt);
            }
        });

        jButtonEditarCamposDeTexto.setText("EDITAR");
        jButtonEditarCamposDeTexto.setEnabled(false);
        jButtonEditarCamposDeTexto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarCamposDeTextoActionPerformed(evt);
            }
        });

        jLabel1.setText("Quantidade máxima de alunos:");

        jSpinner1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        buttonGroup2.add(jRadioButtonIlimitado);
        jRadioButtonIlimitado.setText("Ilimitado");
        jRadioButtonIlimitado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonIlimitadoActionPerformed(evt);
            }
        });

        buttonGroup2.add(jRadioButtonLimitado);
        jRadioButtonLimitado.setText("Limitado");
        jRadioButtonLimitado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonLimitadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxDia, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel29, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxHorario, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxProfessor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxModalidade, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jRadioButtonIlimitado)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioButtonLimitado)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinner1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonCadastroCamposDeTexto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonEditarCamposDeTexto))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(19, 19, 19)
                                            .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jTextFieldNovoProfessor)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(jTextFieldEditarOuExcluirProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jTextFieldNovoHorario)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(jTextFieldEditarOuExcluirHorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jButtonExcluirHorario)
                                        .addComponent(jButtonExcluirProfessor, javax.swing.GroupLayout.Alignment.TRAILING)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jTextFieldNovaModalidade, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextFieldEditarOuExcluirModalidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButtonExcluirModalidade))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(jTextFieldNovoDia, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jTextFieldEditarOuExcluirDia, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jButtonExcluirDia))))
                                .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextFieldTurmaOrdem, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonCadastrarTurma)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonEditarTurma)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonExcluirTurma)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jSeparator2)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxModalidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBoxHorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRadioButtonIlimitado)
                            .addComponent(jRadioButtonLimitado)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldNovaModalidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldEditarOuExcluirModalidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonExcluirModalidade))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldNovoDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldEditarOuExcluirDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButtonExcluirDia))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldNovoHorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldEditarOuExcluirHorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonExcluirHorario))
                        .addGap(2, 2, 2)
                        .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldNovoProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldEditarOuExcluirProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonExcluirProfessor))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonCadastroCamposDeTexto)
                            .addComponent(jButtonEditarCamposDeTexto)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCadastrarTurma)
                    .addComponent(jButtonEditarTurma)
                    .addComponent(jTextFieldTurmaOrdem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonExcluirTurma))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(61, 61, 61)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(406, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCadastrarTurmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCadastrarTurmaActionPerformed
        // TODO add your handling code here:
        if((!jRadioButtonIlimitado.isSelected()&&(!jRadioButtonLimitado.isSelected()))
           ||(jComboBoxModalidade.getSelectedItem().equals("Todas as modalidades"))
           ||(jComboBoxDia.getSelectedItem().equals("Todos os dias"))
           ||(jComboBoxHorario.getSelectedItem().equals("Todos os Horarios"))
           ||(jComboBoxProfessor.getSelectedItem().equals("Todos os professores"))){
            JOptionPane.showMessageDialog(rootPane, "Coloque opções de cadastro válidas!");
        }
        else{
            if(jRadioButtonLimitado.isSelected()){
                try {
                    PreparedStatement pst=conecta.conn.prepareStatement("insert into CADASTROTURMAS(modalidade,DIA,HORARIO,PROFESSOR,qtdAlunos) Values(?,?,?,?,?)");
                    pst.setString(1, (String) jComboBoxModalidade.getSelectedItem());   
                    pst.setString(2, (String) jComboBoxDia.getSelectedItem());  
                    pst.setString(3, (String) jComboBoxHorario.getSelectedItem());
                    pst.setString(4, (String) jComboBoxProfessor.getSelectedItem()); 
                    pst.setString(5, (String) jSpinner1.getValue().toString()); 
                    pst.executeUpdate();
                    JOptionPane.showMessageDialog(rootPane, "Salvo com sucesso!");
                    preencherTabela("select * from CADASTROTURMAS order by ORDEM");
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(rootPane, "Erro na inserção!\n Erro:"+ex);
                }
            }
            else{
                try {
                    PreparedStatement pst=conecta.conn.prepareStatement("insert into CADASTROTURMAS(modalidade,DIA,HORARIO,PROFESSOR,qtdAlunos) Values(?,?,?,?,?)");
                    pst.setString(1, (String) jComboBoxModalidade.getSelectedItem());   
                    pst.setString(2, (String) jComboBoxDia.getSelectedItem());  
                    pst.setString(3, (String) jComboBoxHorario.getSelectedItem());
                    pst.setString(4, (String) jComboBoxProfessor.getSelectedItem()); 
                    pst.setString(5, "Ilimitado"); 
                    pst.executeUpdate();
                    JOptionPane.showMessageDialog(rootPane, "Salvo com sucesso!");
                    preencherTabela("select * from CADASTROTURMAS order by ORDEM");
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(rootPane, "Erro na inserção!\n Erro:"+ex);
                }
            }
        }
    }//GEN-LAST:event_jButtonCadastrarTurmaActionPerformed

    private void jTextFieldNovoDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNovoDiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNovoDiaActionPerformed

    private void jTextFieldNovaModalidade2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNovaModalidade2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNovaModalidade2ActionPerformed

    private void jTextFieldNovoHorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNovoHorarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNovoHorarioActionPerformed

    private void jTextFieldNovoProfessorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNovoProfessorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNovoProfessorActionPerformed

    private void jComboBoxDiaPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jComboBoxDiaPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        //preencherJComboBoxHorario();
    }//GEN-LAST:event_jComboBoxDiaPopupMenuWillBecomeInvisible

    private void jComboBoxHorarioPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jComboBoxHorarioPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        //preencherJComboBoxProfessor();
    }//GEN-LAST:event_jComboBoxHorarioPopupMenuWillBecomeInvisible

    private void jComboBoxHorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxHorarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxHorarioActionPerformed

    private void jTableTurmasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableTurmasMouseClicked
        // TODO add your handling code here:
        String TurmaOrdem=""+jTableTurmas.getValueAt(jTableTurmas.getSelectedRow(), 0);
        jTextFieldTurmaOrdem.setText(TurmaOrdem);
        String JCBModalidade=""+jTableTurmas.getValueAt(jTableTurmas.getSelectedRow(), 1);
        jComboBoxModalidade.setSelectedItem(JCBModalidade);
        String JCBDia=""+jTableTurmas.getValueAt(jTableTurmas.getSelectedRow(), 2);
        jComboBoxDia.setSelectedItem(JCBDia);
        String JCBHorario=""+jTableTurmas.getValueAt(jTableTurmas.getSelectedRow(), 3);
        jComboBoxHorario.setSelectedItem(JCBHorario);
        String JCBProfessor=""+jTableTurmas.getValueAt(jTableTurmas.getSelectedRow(), 4);
        jComboBoxProfessor.setSelectedItem(JCBProfessor);
        String Modalidade=""+jTableTurmas.getValueAt(jTableTurmas.getSelectedRow(), 1);
        jTextFieldNovaModalidade.setText(Modalidade);
        String EditarModalidade=""+jTableTurmas.getValueAt(jTableTurmas.getSelectedRow(), 1);
        jTextFieldEditarOuExcluirModalidade.setText(EditarModalidade);
        String NovoDia=""+jTableTurmas.getValueAt(jTableTurmas.getSelectedRow(), 2);
        jTextFieldNovoDia.setText(NovoDia);
        String EditarDia=""+jTableTurmas.getValueAt(jTableTurmas.getSelectedRow(), 2);
        jTextFieldEditarOuExcluirDia.setText(EditarDia);
        String NovoHorario=""+jTableTurmas.getValueAt(jTableTurmas.getSelectedRow(), 3);
        jTextFieldNovoHorario.setText(NovoHorario);
        String EditarHorario=""+jTableTurmas.getValueAt(jTableTurmas.getSelectedRow(), 3);
        jTextFieldEditarOuExcluirHorario.setText(EditarHorario);
        String NovoProfessor=""+jTableTurmas.getValueAt(jTableTurmas.getSelectedRow(), 4);
        jTextFieldNovoProfessor.setText(NovoProfessor);
        String EditarProfessor=""+jTableTurmas.getValueAt(jTableTurmas.getSelectedRow(), 4);
        jTextFieldEditarOuExcluirProfessor.setText(EditarProfessor);
        jButtonCadastrarTurma.setEnabled(false);
        jButtonEditarTurma.setEnabled(true);
        jButtonExcluirTurma.setEnabled(true);
        jButtonCadastroCamposDeTexto.setEnabled(false);
        jButtonEditarCamposDeTexto.setEnabled(true);
        jButtonExcluirModalidade.setEnabled(true);
        jButtonExcluirDia.setEnabled(true);
        jButtonExcluirHorario.setEnabled(true);
        jButtonExcluirProfessor.setEnabled(true);
        //jButtonExcluir.setEnabled(true);
    }//GEN-LAST:event_jTableTurmasMouseClicked

    private void jTextFieldEditarOuExcluirModalidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldEditarOuExcluirModalidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldEditarOuExcluirModalidadeActionPerformed

    private void jTextFieldEditarOuExcluirDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldEditarOuExcluirDiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldEditarOuExcluirDiaActionPerformed

    private void jTextFieldEditarOuExcluirHorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldEditarOuExcluirHorarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldEditarOuExcluirHorarioActionPerformed

    private void jTextFieldEditarOuExcluirProfessorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldEditarOuExcluirProfessorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldEditarOuExcluirProfessorActionPerformed

    private void jButtonExcluirModalidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirModalidadeActionPerformed
        // TODO add your handling code here:
        conecta.executaSQLExcluir("delete from CADASTROMODALIDADES where modalidade='"+jTextFieldEditarOuExcluirModalidade.getText()+"'");
        conecta.executaSQLExcluir("delete from CADASTROTURMAS where modalidade='"+jTextFieldEditarOuExcluirModalidade.getText()+"'");
        conecta.executaSQLExcluir("INSERT INTO ExALUNOS SELECT * FROM CADASTROALUNOS where MODALIDADE='"+jTextFieldNovaModalidade.getText()+"'");
        conecta.executaSQLExcluir("delete from CADASTROALUNOS where modalidade='"+jTextFieldEditarOuExcluirModalidade.getText()+"'");
        JOptionPane.showMessageDialog(rootPane,"Excluido com sucesso!");
        preencherTabela("select * from CADASTROTURMAS order by ORDEM");
        preencherJComboBoxModalidade(); 
        EsvaziarCamposDeTexto();
        MudarEstadosDosBotoes();
    }//GEN-LAST:event_jButtonExcluirModalidadeActionPerformed

    private void jButtonExcluirDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirDiaActionPerformed
        // TODO add your handling code here:
        conecta.executaSQLExcluir("delete from CADASTRODIAS where DIA='"+jTextFieldEditarOuExcluirDia.getText()+"'");
        conecta.executaSQLExcluir("delete from CADASTROTURMAS where DIA='"+jTextFieldEditarOuExcluirDia.getText()+"'");
        conecta.executaSQLExcluir("INSERT INTO ExALUNOS SELECT * FROM CADASTROALUNOS where DIA='"+jTextFieldNovoDia.getText()+"'");
        conecta.executaSQLExcluir("delete from CADASTROALUNOS where DIA='"+jTextFieldEditarOuExcluirDia.getText()+"'");
        JOptionPane.showMessageDialog(rootPane,"Excluido com sucesso!");
        preencherTabela("select * from CADASTROTURMAS order by ORDEM");
        preencherJComboBoxDia(); 
        EsvaziarCamposDeTexto();
        MudarEstadosDosBotoes();
    }//GEN-LAST:event_jButtonExcluirDiaActionPerformed

    private void jButtonExcluirHorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirHorarioActionPerformed
        // TODO add your handling code here:
        conecta.executaSQLExcluir("delete from CADASTROHORARIOS where HORARIO='"+jTextFieldEditarOuExcluirHorario.getText()+"'");
        conecta.executaSQLExcluir("delete from CADASTROTURMAS where HORARIO='"+jTextFieldEditarOuExcluirHorario.getText()+"'");
        conecta.executaSQLExcluir("INSERT INTO ExALUNOS SELECT * FROM CADASTROALUNOS where HORARIO='"+jTextFieldNovoHorario.getText()+"'");
        conecta.executaSQLExcluir("delete from CADASTROALUNOS where HORARIO='"+jTextFieldEditarOuExcluirHorario.getText()+"'");
        JOptionPane.showMessageDialog(rootPane,"Excluido com sucesso!");
        preencherTabela("select * from CADASTROTURMAS order by ORDEM");
        preencherJComboBoxHorario(); 
        EsvaziarCamposDeTexto();
        MudarEstadosDosBotoes();
    }//GEN-LAST:event_jButtonExcluirHorarioActionPerformed

    private void jButtonExcluirProfessorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirProfessorActionPerformed
        // TODO add your handling code here:
        conecta.executaSQLExcluir("delete from CADASTROPROFESSORES where PROFESSOR='"+jTextFieldEditarOuExcluirProfessor.getText()+"'");
        conecta.executaSQLExcluir("delete from CADASTROTURMAS where PROFESSOR='"+jTextFieldEditarOuExcluirProfessor.getText()+"'");
        conecta.executaSQLExcluir("INSERT INTO ExALUNOS SELECT * FROM CADASTROALUNOS where PROFESSOR='"+jTextFieldNovoProfessor.getText()+"'");
        conecta.executaSQLExcluir("delete from CADASTROALUNOS where PROFESSOR='"+jTextFieldEditarOuExcluirProfessor.getText()+"'");
        JOptionPane.showMessageDialog(rootPane,"Excluido com sucesso!");
        preencherTabela("select * from CADASTROTURMAS order by ORDEM");
        preencherJComboBoxProfessor(); 
        EsvaziarCamposDeTexto();
        MudarEstadosDosBotoes();
    }//GEN-LAST:event_jButtonExcluirProfessorActionPerformed

    private void jTextFieldNovaModalidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNovaModalidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNovaModalidadeActionPerformed

    private void jButtonEditarTurmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarTurmaActionPerformed
        // TODO add your handling code here:
        if((!jRadioButtonIlimitado.isSelected()&&(!jRadioButtonLimitado.isSelected()))
            ||(jComboBoxModalidade.getSelectedItem().equals("Todas as modalidades"))
            ||(jComboBoxDia.getSelectedItem().equals("Todos os dias"))
            ||(jComboBoxHorario.getSelectedItem().equals("Todos os Horarios"))
            ||(jComboBoxProfessor.getSelectedItem().equals("Todos os professores"))){
            JOptionPane.showMessageDialog(rootPane, "Coloque opções de cadastro válidas!");
        }
        else{
            if(jRadioButtonLimitado.isSelected()){
                try {
                    PreparedStatement pst=conecta.conn.prepareStatement("update CADASTROTURMAS set modalidade=?,DIA=?,HORARIO=?,"
                            + "PROFESSOR=?,qtdAlunos=? where ORDEM=?");
                    pst.setString(1, (String) jComboBoxModalidade.getSelectedItem());
                    pst.setString(2, (String) jComboBoxDia.getSelectedItem());
                    pst.setString(3, (String) jComboBoxHorario.getSelectedItem());
                    pst.setString(4, (String) jComboBoxProfessor.getSelectedItem());
                    pst.setString(5, (String) jSpinner1.getValue().toString()); 
                    pst.setString(6,jTextFieldTurmaOrdem.getText());
                
                    pst.executeUpdate();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null,"Erro ao editar\n Erro:"+ex);
                }
            }
            else{
                try {
                    PreparedStatement pst=conecta.conn.prepareStatement("update CADASTROTURMAS set modalidade=?,DIA=?,HORARIO=?,"
                            + "PROFESSOR=?,qtdAlunos=? where ORDEM=?");
                    pst.setString(1, (String) jComboBoxModalidade.getSelectedItem());
                    pst.setString(2, (String) jComboBoxDia.getSelectedItem());
                    pst.setString(3, (String) jComboBoxHorario.getSelectedItem());
                    pst.setString(4, (String) jComboBoxProfessor.getSelectedItem());
                    pst.setString(5, "Ilimitado"); 
                    pst.setString(6,jTextFieldTurmaOrdem.getText());
                
                    pst.executeUpdate();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null,"Erro ao editar\n Erro:"+ex);
                }
            }
            try{
                PreparedStatement pst2=conecta.conn.prepareStatement("update CADASTROALUNOS set modalidade=? where modalidade=?");
                pst2.setString(1, (String) jComboBoxModalidade.getSelectedItem());
                pst2.setString(2,jTextFieldEditarOuExcluirModalidade.getText());
                PreparedStatement pst3=conecta.conn.prepareStatement("update CADASTROALUNOS set DIA=? where DIA=?");
                pst3.setString(1, (String) jComboBoxDia.getSelectedItem());
                pst3.setString(2,jTextFieldEditarOuExcluirDia.getText());
                PreparedStatement pst4=conecta.conn.prepareStatement("update CADASTROALUNOS set HORARIO=? where HORARIO=?");
                pst4.setString(1, (String) jComboBoxHorario.getSelectedItem());
                pst4.setString(2,jTextFieldEditarOuExcluirHorario.getText());
                PreparedStatement pst5=conecta.conn.prepareStatement("update CADASTROALUNOS set PROFESSOR=? where PROFESSOR=?");
                pst5.setString(1, (String) jComboBoxProfessor.getSelectedItem());
                pst5.setString(2,jTextFieldEditarOuExcluirProfessor.getText());

                pst2.executeUpdate();
                pst3.executeUpdate();
                pst4.executeUpdate();
                pst5.executeUpdate();
                JOptionPane.showMessageDialog(rootPane, "Salvo com sucesso!");
                preencherJComboBoxModalidade();
                preencherJComboBoxDia();
                preencherJComboBoxHorario();
                preencherJComboBoxProfessor();
                EsvaziarCamposDeTexto();
                MudarEstadosDosBotoes();
                preencherTabela("select * from CADASTROTURMAS order by ORDEM");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Erro ao editar\n Erro:"+ex);
            }
        }
    }//GEN-LAST:event_jButtonEditarTurmaActionPerformed

    private void jTextFieldTurmaOrdemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTurmaOrdemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTurmaOrdemActionPerformed

    private void jButtonExcluirTurmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirTurmaActionPerformed
        // TODO add your handling code here:
        conecta.executaSQLExcluir("delete from CADASTROTURMAS where ORDEM='"+jTextFieldTurmaOrdem.getText()+"'");
        conecta.executaSQLExcluir("INSERT INTO ExALUNOS SELECT * FROM CADASTROALUNOS where MODALIDADE like'"+jComboBoxModalidade.getSelectedItem()+"'"
                                    + "and DIA like'%"+jComboBoxDia.getSelectedItem()+"%'"
                                    + "and HORARIO like'%"+jComboBoxHorario.getSelectedItem()+"%'"
                                    + "and PROFESSOR like'%"+jComboBoxProfessor.getSelectedItem()+"%'");
        conecta.executaSQLExcluir("delete from CADASTROALUNOS where modalidade like'"+jComboBoxModalidade.getSelectedItem()+"'"
                                    + "and DIA like'%"+jComboBoxDia.getSelectedItem()+"%'"
                                    + "and HORARIO like'%"+jComboBoxHorario.getSelectedItem()+"%'"
                                    + "and PROFESSOR like'%"+jComboBoxProfessor.getSelectedItem()+"%'");
        JOptionPane.showMessageDialog(rootPane,"Excluido com sucesso!");
        preencherTabela("select * from CADASTROTURMAS order by ORDEM");
        preencherJComboBoxModalidade(); 
        EsvaziarCamposDeTexto();
        MudarEstadosDosBotoes();
    }//GEN-LAST:event_jButtonExcluirTurmaActionPerformed

    private void jButtonCadastroCamposDeTextoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCadastroCamposDeTextoActionPerformed
        // TODO add your handling code here:
    if( !jTextFieldNovaModalidade.getText().isEmpty()){
        try {
            PreparedStatement pst=conecta.conn.prepareStatement("insert into CADASTROMODALIDADES(MODALIDADE) Values(?)");
            pst.setString(1,jTextFieldNovaModalidade.getText());
            pst.executeUpdate();
            JOptionPane.showMessageDialog(rootPane, "Modalidade salva com sucesso!");
            preencherJComboBoxModalidade();
            jTextFieldNovaModalidade.setText("");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro na inserção!\n Erro:"+ex);
        }
    }
    if( !jTextFieldNovoDia.getText().isEmpty()){
        try {
            PreparedStatement pst2=conecta.conn.prepareStatement("insert into CADASTRODIAS(DIA) Values(?)");
            pst2.setString(1,jTextFieldNovoDia.getText());
            pst2.executeUpdate();
            JOptionPane.showMessageDialog(rootPane, "Dia salvo com sucesso!"); 
            preencherJComboBoxDia();
            jTextFieldNovoDia.setText("");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro na inserção!\n Erro:"+ex);
        }
    }
    if( !jTextFieldNovoHorario.getText().isEmpty()){
        try {
            PreparedStatement pst3=conecta.conn.prepareStatement("insert into CADASTROHORARIOS(HORARIO) Values(?)");
            pst3.setString(1,jTextFieldNovoHorario.getText());
            pst3.executeUpdate();
            JOptionPane.showMessageDialog(rootPane, "Horário salvo com sucesso!");  
            preencherJComboBoxHorario();
            jTextFieldNovoHorario.setText("");    
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro na inserção!\n Erro:"+ex);
        }
    }
    if( !jTextFieldNovoProfessor.getText().isEmpty()){
        try {
            PreparedStatement pst3=conecta.conn.prepareStatement("insert into CADASTROPROFESSORES(PROFESSOR) Values(?)");
            pst3.setString(1,jTextFieldNovoProfessor.getText());
            pst3.executeUpdate();
            JOptionPane.showMessageDialog(rootPane, "Professor salvo com sucesso!");
            preencherJComboBoxProfessor();
            jTextFieldNovoProfessor.setText("");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro na inserção!\n Erro:"+ex);
        }
    }
    }//GEN-LAST:event_jButtonCadastroCamposDeTextoActionPerformed

    private void jButtonEditarCamposDeTextoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarCamposDeTextoActionPerformed
        // TODO add your handling code here:
    if((jTextFieldNovaModalidade.getText().isEmpty())||(jTextFieldNovoDia.getText().isEmpty())
        ||(jTextFieldNovoHorario.getText().isEmpty())||(jTextFieldNovoProfessor.getText().isEmpty())){
        JOptionPane.showMessageDialog(rootPane, "Preencha os campos de texto!");
    }
    else{    
        try {
            //Altera o valor de modalidade nas 3 tabelas(cadastromodalidades,cadastroturmas e cadastroalunos)
            PreparedStatement pst=conecta.conn.prepareStatement("update CADASTROMODALIDADES set MODALIDADE=? where MODALIDADE=?");
            pst.setString(1,jTextFieldNovaModalidade.getText());
            pst.setString(2,jTextFieldEditarOuExcluirModalidade.getText());
            PreparedStatement pst2=conecta.conn.prepareStatement("update CADASTROTURMAS set modalidade=? where modalidade=?");
            pst2.setString(1,jTextFieldNovaModalidade.getText());
            pst2.setString(2,jTextFieldEditarOuExcluirModalidade.getText());
            PreparedStatement pst3=conecta.conn.prepareStatement("update CADASTROALUNOS set modalidade=? where modalidade=?");
            pst3.setString(1,jTextFieldNovaModalidade.getText());
            pst3.setString(2,jTextFieldEditarOuExcluirModalidade.getText());
            
            //Altera o valor de dia nas 3 tabelas(cadastrodias,cadastrodias e cadastrodias)
            PreparedStatement pst4=conecta.conn.prepareStatement("update CADASTRODIAS set DIA=? where DIA=?");
            pst4.setString(1,jTextFieldNovoDia.getText());
            pst4.setString(2,jTextFieldEditarOuExcluirDia.getText());
            PreparedStatement pst5=conecta.conn.prepareStatement("update CADASTROTURMAS set DIA=? where DIA=?");
            pst5.setString(1,jTextFieldNovoDia.getText());
            pst5.setString(2,jTextFieldEditarOuExcluirDia.getText());
            PreparedStatement pst6=conecta.conn.prepareStatement("update CADASTROALUNOS set DIA=? where DIA=?");
            pst6.setString(1,jTextFieldNovoDia.getText());
            pst6.setString(2,jTextFieldEditarOuExcluirDia.getText());
            
             //Altera o valor de horario nas 3 tabelas(cadastrohorarios,cadastrohorarios e cadastrohorarios)
            PreparedStatement pst7=conecta.conn.prepareStatement("update CADASTROHORARIOS set HORARIO=? where HORARIO=?");
            pst7.setString(1,jTextFieldNovoHorario.getText());
            pst7.setString(2,jTextFieldEditarOuExcluirHorario.getText());
            PreparedStatement pst8=conecta.conn.prepareStatement("update CADASTROTURMAS set HORARIO=? where HORARIO=?");
            pst8.setString(1,jTextFieldNovoHorario.getText());
            pst8.setString(2,jTextFieldEditarOuExcluirHorario.getText());
            PreparedStatement pst9=conecta.conn.prepareStatement("update CADASTROALUNOS set HORARIO=? where HORARIO=?");
            pst9.setString(1,jTextFieldNovoHorario.getText());
            pst9.setString(2,jTextFieldEditarOuExcluirHorario.getText());
            
            //Altera o valor de professor nas 3 tabelas(cadastroprofessores,cadastroprofessores e cadastroprofessores)
            PreparedStatement pst10=conecta.conn.prepareStatement("update CADASTROPROFESSORES set PROFESSOR=? where PROFESSOR=?");
            pst10.setString(1,jTextFieldNovoProfessor.getText());
            pst10.setString(2,jTextFieldEditarOuExcluirProfessor.getText());
            PreparedStatement pst11=conecta.conn.prepareStatement("update CADASTROTURMAS set PROFESSOR=? where PROFESSOR=?");
            pst11.setString(1,jTextFieldNovoProfessor.getText());
            pst11.setString(2,jTextFieldEditarOuExcluirProfessor.getText());
            PreparedStatement pst12=conecta.conn.prepareStatement("update CADASTROALUNOS set PROFESSOR=? where PROFESSOR=?");
            pst12.setString(1,jTextFieldNovoProfessor.getText());
            pst12.setString(2,jTextFieldEditarOuExcluirProfessor.getText());

            //atualiza o valor de modalidade nas tabelas
            pst.executeUpdate();
            pst2.executeUpdate();
            pst3.executeUpdate();
            //atualiza o valor de dia nas tabelas
            pst4.executeUpdate();
            pst5.executeUpdate();
            pst6.executeUpdate();
            //atualiza o valor de horario nas tabelas
            pst7.executeUpdate();
            pst8.executeUpdate();
            pst9.executeUpdate();
            //atualiza o valor de professores nas tabelas
            pst10.executeUpdate();
            pst11.executeUpdate();
            pst12.executeUpdate();
            JOptionPane.showMessageDialog(rootPane, "Salvo com sucesso!");
            preencherJComboBoxModalidade();
            preencherJComboBoxDia();
            preencherJComboBoxHorario();
            preencherJComboBoxProfessor();
            EsvaziarCamposDeTexto();
            MudarEstadosDosBotoes();
            preencherTabela("select * from CADASTROTURMAS order by ORDEM");
            //jButtonExcluir.setEnabled(false);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Erro ao editar\n Erro:"+ex);
        }
    }          
    }//GEN-LAST:event_jButtonEditarCamposDeTextoActionPerformed

    private void jTableTurmasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableTurmasMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableTurmasMouseEntered

    private void jRadioButtonIlimitadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonIlimitadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonIlimitadoActionPerformed

    private void jRadioButtonLimitadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonLimitadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonLimitadoActionPerformed
    public void preencherJComboBoxModalidade(){
        conecta.conexao();
        conecta.executaSQL("select * from CadastroModalidades order by modalidade");
        try {
            conecta.rs.first();
            jComboBoxModalidade.removeAllItems();
            jComboBoxModalidade.addItem("Todas as modalidades");
            do{
                if(!conecta.rs.getString("modalidade").isEmpty()){
                    jComboBoxModalidade.addItem(conecta.rs.getString("modalidade"));
                }
            }while(conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane,"Erro ao preencher JComboBoxModalidade!\n Erro:"+ ex);
        }
    }
    public void preencherJComboBoxDia(){
        conecta.conexao();
        conecta.executaSQL("select * from CADASTRODIAS order by DIA");
        try {
            conecta.rs.first();
            jComboBoxDia.removeAllItems();
            jComboBoxDia.addItem("Todos os dias");
            do{
                if(!conecta.rs.getString("DIA").isEmpty()){
                    jComboBoxDia.addItem(conecta.rs.getString("DIA"));
                }
            }while(conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane,"Erro ao preencher JComboBoxDia!\n Erro:"+ ex);
        }
    }
    public void preencherJComboBoxHorario(){
        conecta.conexao();
        conecta.executaSQL("select * from CADASTROHORARIOS order by HORARIO");
        try {
            conecta.rs.first();
            jComboBoxHorario.removeAllItems();
            jComboBoxHorario.addItem("Todos os Horarios");
            do{
                if(!conecta.rs.getString("HORARIO").isEmpty()){
                    jComboBoxHorario.addItem(conecta.rs.getString("HORARIO"));
                }
            }while(conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane,"Erro ao preencher JComboBoxHorario!\n Erro:"+ ex);
        }
    }
    public void preencherJComboBoxProfessor(){
        conecta.conexao();
        conecta.executaSQL("select * from CADASTROPROFESSORES order by PROFESSOR");
        try {
            conecta.rs.first();
            jComboBoxProfessor.removeAllItems();
            jComboBoxProfessor.addItem("Todos os professores");
            do{
                if(!conecta.rs.getString("PROFESSOR").isEmpty()){
                    jComboBoxProfessor.addItem(conecta.rs.getString("PROFESSOR"));
                }
            }while(conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane,"Erro ao preencher JComboBoxProfessor!\n Erro:"+ ex);
        }
    }
    public void preencherTabela(String SQL){
        ArrayList dados=new ArrayList();
        String[] Colunas=new String[]{"Turma","Modalidade","Dia","Horário","Professor","Máx de alunos"};
        conecta.executaSQL(SQL);
        try {
            conecta.rs.first();
            do{
            dados.add(new Object[]{conecta.rs.getString("ORDEM"),conecta.rs.getString("MODALIDADE"),conecta.rs.getString("DIA"),conecta.rs.getString("HORARIO"),
                conecta.rs.getString("PROFESSOR"),conecta.rs.getString("qtdAlunos")});
            }while(conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao preencher o ArrayList!\n Erro:"+ex);
        }
        ModeloTabela ModeloTabela=new ModeloTabela(dados,Colunas);
        jTableTurmas.setModel(ModeloTabela);  
    }
    public void EsvaziarCamposDeTexto(){
        jTextFieldNovaModalidade.setText("");
        jTextFieldEditarOuExcluirModalidade.setText("");
        jTextFieldNovoDia.setText("");
        jTextFieldEditarOuExcluirDia.setText("");
        jTextFieldNovoHorario.setText("");
        jTextFieldEditarOuExcluirHorario.setText("");
        jTextFieldNovoProfessor.setText("");
        jTextFieldEditarOuExcluirProfessor.setText("");
    }
    public void MudarEstadosDosBotoes(){
        jButtonCadastrarTurma.setEnabled(true);
        jButtonEditarTurma.setEnabled(false);
        jButtonExcluirTurma.setEnabled(false);
        jButtonCadastroCamposDeTexto.setEnabled(true);
        jButtonEditarCamposDeTexto.setEnabled(false);
        jButtonExcluirModalidade.setEnabled(false);
        jButtonExcluirDia.setEnabled(false);
        jButtonExcluirHorario.setEnabled(false);
        jButtonExcluirProfessor.setEnabled(false);     
    }
/*    public void jSpinnerDisponivel(){
        if(jRadioButtonIlimitado.isSelected()){
            jSpinner1.isEnabled();
        }
        else{
            System.out.println("ola");
        }
    }
  */  
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroModalidades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroModalidades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroModalidades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroModalidades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroModalidades().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButtonCadastrarTurma;
    private javax.swing.JButton jButtonCadastroCamposDeTexto;
    private javax.swing.JButton jButtonEditarCamposDeTexto;
    private javax.swing.JButton jButtonEditarTurma;
    private javax.swing.JButton jButtonExcluirDia;
    private javax.swing.JButton jButtonExcluirHorario;
    private javax.swing.JButton jButtonExcluirModalidade;
    private javax.swing.JButton jButtonExcluirProfessor;
    private javax.swing.JButton jButtonExcluirTurma;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBoxDia;
    private javax.swing.JComboBox<String> jComboBoxHorario;
    private javax.swing.JComboBox<String> jComboBoxModalidade;
    private javax.swing.JComboBox<String> jComboBoxProfessor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JRadioButton jRadioButtonIlimitado;
    private javax.swing.JRadioButton jRadioButtonLimitado;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTableTurmas;
    private javax.swing.JTextField jTextFieldEditarOuExcluirDia;
    private javax.swing.JTextField jTextFieldEditarOuExcluirHorario;
    private javax.swing.JTextField jTextFieldEditarOuExcluirModalidade;
    private javax.swing.JTextField jTextFieldEditarOuExcluirProfessor;
    private javax.swing.JTextField jTextFieldNovaModalidade;
    private javax.swing.JTextField jTextFieldNovaModalidade2;
    private javax.swing.JTextField jTextFieldNovoDia;
    private javax.swing.JTextField jTextFieldNovoHorario;
    private javax.swing.JTextField jTextFieldNovoProfessor;
    private javax.swing.JTextField jTextFieldTurmaOrdem;
    // End of variables declaration//GEN-END:variables
}
